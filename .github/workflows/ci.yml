name: CI

on:
  pull_request:
  push:

jobs:
  check-commit-message:
    name: Check commit message for skipping build(s)
    runs-on: ubuntu-latest

    # skips CI and prints cli message, without fail build badge
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: print message via cli
        run: echo "no need to build, based from commit message"

  test:
    name: Elixir v${{ matrix.elixir }}/OTP v${{ matrix.otp }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - elixir: 1.11.x
            otp: 22
          - elixir: 1.12.x
            otp: 23
          - elixir: 1.13.x
            otp: 24
            warnings_as_errors: true
            static_analysis: true
    env:
      MIX_ENV: test

    services:
      db:
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        image: postgres:14
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # doesn't contain "[skip ci]" in commit message
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache artifacts
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        # if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix format --check-formatted

      - name: Compile project
        if: matrix.warnings_as_errors
        run: mix compile --warnings-as-errors

      - name: run tests
        run: mix test
        # run: mix coveralls.github
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: run static analysis
        if: matrix.static_analysis
        run: mix credo --all --strict
      