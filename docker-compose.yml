services:
  postgres:
    image: arm64v8/postgres:14-alpine
    container_name: postgres
    cpu_count: 1
    cpus: 0.5
    ports:
      - "5432:5432"
    env_file:
      - ./nappy_dev.env
    volumes:
      - ./priv/repo/nappy_dev.sql:/docker-entrypoint-initdb.d/nappy_dev.sql

  # app:
  #   container_name: nappy
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   cpu_count: 1
  #   cpus: 0.5
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - "4000:4000"
  #   env_file:
  #     - ./nappy_dev.env
  #   volumes:
  #     - ./_build/prod/rel/nappy/:/app

  minio:
    image: bitnami/minio:2023.3.24
    container_name: minio
    cpu_count: 1
    cpus: 0.5
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ./nappy_dev.env
    volumes:
      - minio_data:/data

  typesense:
    image: typesense/typesense:0.24.1-arm64
    container_name: typesense
    entrypoint: sh -c "/opt/typesense-server --data-dir /data --api-key=xyz"
    cpu_count: 1
    cpus: 0.5
    ports:
      - "8108:8108"
    volumes:
      - typesense:/data

  # This is used when deploying to
  # a vps with caddy as web server
  # web:
  #   build: .
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file: "nappy.env"
  #   tty: true
  #   ports:
  #     - "4000:4000"
  #   restart: "always"
  # migration:
  #   build: .
  #   env_file:
  #     - ./nappy.env
  #   depends_on:
  #     - web
  #   command: bin/migrate
  #   restart: "no"

volumes:
  minio_data:
    driver: local
  typesense:
    driver: local
